{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"day\", \"outsideCurrentMonth\", \"isEndOfHighlighting\", \"isEndOfPreviewing\", \"isHighlighting\", \"isPreviewing\", \"isStartOfHighlighting\", \"isStartOfPreviewing\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useLicenseVerifier } from '@mui/x-license-pro';\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { DAY_MARGIN, useUtils, areDayPropsEqual } from '@mui/x-date-pickers/internals';\nimport { PickersDay } from '@mui/x-date-pickers/PickersDay';\nimport { getDateRangePickerDayUtilityClass, dateRangePickerDayClasses } from './dateRangePickerDayClasses';\nimport { getReleaseInfo } from '../internal/utils/releaseInfo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst releaseInfo = getReleaseInfo();\nconst useUtilityClasses = ownerState => {\n  const {\n    isHighlighting,\n    outsideCurrentMonth,\n    isStartOfHighlighting,\n    isStartOfMonth,\n    isEndOfHighlighting,\n    isEndOfMonth,\n    isPreviewing,\n    isStartOfPreviewing,\n    isEndOfPreviewing,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', isHighlighting && !outsideCurrentMonth && 'rangeIntervalDayHighlight', (isStartOfHighlighting || isStartOfMonth) && 'rangeIntervalDayHighlightStart', (isEndOfHighlighting || isEndOfMonth) && 'rangeIntervalDayHighlightEnd'],\n    rangeIntervalPreview: ['rangeIntervalPreview', isPreviewing && !outsideCurrentMonth && 'rangeIntervalDayPreview', (isStartOfPreviewing || isStartOfMonth) && 'rangeIntervalDayPreviewStart', (isEndOfPreviewing || isEndOfMonth) && 'rangeIntervalDayPreviewEnd'],\n    day: ['day', !selected && 'notSelectedDate', !isHighlighting && 'dayOutsideRangeInterval', !selected && isHighlighting && 'dayInsideRangeInterval']\n  };\n  return composeClasses(slots, getDateRangePickerDayUtilityClass, classes);\n};\nconst endBorderStyle = {\n  borderTopRightRadius: '50%',\n  borderBottomRightRadius: '50%'\n};\nconst startBorderStyle = {\n  borderTopLeftRadius: '50%',\n  borderBottomLeftRadius: '50%'\n};\nconst DateRangePickerDayRoot = styled('div', {\n  name: 'MuiDateRangePickerDay',\n  slot: 'Root',\n  overridesResolver: (_, styles) => [{\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayHighlight}`]: styles.rangeIntervalDayHighlight\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayHighlightStart}`]: styles.rangeIntervalDayHighlightStart\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayHighlightEnd}`]: styles.rangeIntervalDayHighlightEnd\n  }, styles.root]\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({\n    [`&:first-of-type .${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: _extends({}, startBorderStyle, {\n      borderLeftColor: theme.palette.divider\n    }),\n    [`&:last-of-type .${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: _extends({}, endBorderStyle, {\n      borderRightColor: theme.palette.divider\n    })\n  }, ownerState.isHighlighting && !ownerState.outsideCurrentMonth && {\n    borderRadius: 0,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: alpha(theme.palette.primary.light, 0.6),\n    '&:first-of-type': startBorderStyle,\n    '&:last-of-type': endBorderStyle\n  }, (ownerState.isStartOfHighlighting || ownerState.isStartOfMonth) && _extends({}, startBorderStyle, {\n    paddingLeft: 0,\n    marginLeft: DAY_MARGIN / 2\n  }), (ownerState.isEndOfHighlighting || ownerState.isEndOfMonth) && _extends({}, endBorderStyle, {\n    paddingRight: 0,\n    marginRight: DAY_MARGIN / 2\n  }));\n});\nDateRangePickerDayRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  ownerState: PropTypes.object.isRequired\n};\nconst DateRangePickerDayRangeIntervalPreview = styled('div', {\n  name: 'MuiDateRangePickerDay',\n  slot: 'RangeIntervalPreview',\n  overridesResolver: (_, styles) => [{\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: styles.rangeIntervalDayPreview\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayPreviewStart}`]: styles.rangeIntervalDayPreviewStart\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayPreviewEnd}`]: styles.rangeIntervalDayPreviewEnd\n  }, styles.rangeIntervalPreview]\n})(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  return _extends({\n    // replace default day component margin with transparent border to avoid jumping on preview\n    border: '2px solid transparent'\n  }, ownerState.isPreviewing && !ownerState.outsideCurrentMonth && _extends({\n    borderRadius: 0,\n    border: `2px dashed ${theme.palette.divider}`,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent'\n  }, (ownerState.isStartOfPreviewing || ownerState.isStartOfMonth) && _extends({\n    borderLeftColor: theme.palette.divider\n  }, startBorderStyle), (ownerState.isEndOfPreviewing || ownerState.isEndOfMonth) && _extends({\n    borderRightColor: theme.palette.divider\n  }, endBorderStyle)));\n});\nDateRangePickerDayRangeIntervalPreview.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  ownerState: PropTypes.object.isRequired\n};\nconst DateRangePickerDayDay = styled(PickersDay, {\n  name: 'MuiDateRangePickerDay',\n  slot: 'Day',\n  overridesResolver: (_, styles) => [{\n    [`&.${dateRangePickerDayClasses.dayInsideRangeInterval}`]: styles.dayInsideRangeInterval\n  }, {\n    [`&.${dateRangePickerDayClasses.dayOutsideRangeInterval}`]: styles.dayOutsideRangeInterval\n  }, {\n    [`&.${dateRangePickerDayClasses.notSelectedDate}`]: styles.notSelectedDate\n  }, styles.day]\n})(_ref3 => {\n  let {\n    theme,\n    ownerState\n  } = _ref3;\n  return _extends({\n    // Required to overlap preview border\n    transform: 'scale(1.1)',\n    '& > *': {\n      transform: 'scale(0.9)'\n    }\n  }, !ownerState.selected && {\n    backgroundColor: 'transparent'\n  }, !ownerState.isHighlighting && {\n    '&:hover': {\n      border: `1px solid ${theme.palette.grey[500]}`\n    }\n  }, !ownerState.selected && ownerState.isHighlighting && {\n    color: theme.palette.getContrastText(alpha(theme.palette.primary.light, 0.6))\n  });\n});\nconst DateRangePickerDayRaw = /*#__PURE__*/React.forwardRef(function DateRangePickerDay(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDateRangePickerDay'\n  });\n  const {\n      className,\n      day,\n      outsideCurrentMonth,\n      isHighlighting,\n      isPreviewing,\n      selected = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  useLicenseVerifier('x-date-pickers-pro', releaseInfo);\n  const utils = useUtils();\n  const isEndOfMonth = utils.isSameDay(day, utils.endOfMonth(day));\n  const isStartOfMonth = utils.isSameDay(day, utils.startOfMonth(day));\n  const shouldRenderHighlight = isHighlighting && !outsideCurrentMonth;\n  const shouldRenderPreview = isPreviewing && !outsideCurrentMonth;\n  const ownerState = _extends({}, props, {\n    selected,\n    isStartOfMonth,\n    isEndOfMonth\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DateRangePickerDayRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    children: /*#__PURE__*/_jsx(DateRangePickerDayRangeIntervalPreview, {\n      className: classes.rangeIntervalPreview,\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(DateRangePickerDayDay, _extends({}, other, {\n        ref: ref,\n        disableMargin: true,\n        day: day,\n        selected: selected,\n        outsideCurrentMonth: outsideCurrentMonth,\n        className: classes.day,\n        ownerState: ownerState\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangePickerDayRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The date to show.\n   */\n  day: PropTypes.any.isRequired,\n  /**\n   * If `true`, renders as disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n  /**\n   * If `true`, days are rendering without margin. Useful for displaying linked range of days.\n   * @default false\n   */\n  disableMargin: PropTypes.bool,\n  isAnimating: PropTypes.bool,\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isEndOfHighlighting: PropTypes.bool.isRequired,\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isEndOfPreviewing: PropTypes.bool.isRequired,\n  /**\n   * Set to `true` if the `day` is in a highlighted date range.\n   */\n  isHighlighting: PropTypes.bool.isRequired,\n  /**\n   * Set to `true` if the `day` is in a preview date range.\n   */\n  isPreviewing: PropTypes.bool.isRequired,\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isStartOfHighlighting: PropTypes.bool.isRequired,\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isStartOfPreviewing: PropTypes.bool.isRequired,\n  onDaySelect: PropTypes.func.isRequired,\n  /**\n   * If `true`, day is outside of month and will be hidden.\n   */\n  outsideCurrentMonth: PropTypes.bool.isRequired,\n  /**\n   * If `true`, renders as selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * If `true`, days that have `outsideCurrentMonth={true}` are displayed.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, renders as today date.\n   * @default false\n   */\n  today: PropTypes.bool\n} : void 0;\nconst propsAreEqual = (prevProps, nextProps) => {\n  return prevProps.isHighlighting === nextProps.isHighlighting && prevProps.isEndOfHighlighting === nextProps.isEndOfHighlighting && prevProps.isStartOfHighlighting === nextProps.isStartOfHighlighting && prevProps.isPreviewing === nextProps.isPreviewing && prevProps.isEndOfPreviewing === nextProps.isEndOfPreviewing && prevProps.isStartOfPreviewing === nextProps.isStartOfPreviewing && areDayPropsEqual(prevProps, nextProps);\n};\n/**\n *\n * Demos:\n *\n * - [Date Range Picker](https://mui.com/x/react-date-pickers/date-range-picker/)\n *\n * API:\n *\n * - [DateRangePickerDay API](https://mui.com/x/api/date-pickers/date-range-picker-day/)\n */\n\nexport const DateRangePickerDay = /*#__PURE__*/React.memo(DateRangePickerDayRaw, propsAreEqual);","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","useLicenseVerifier","alpha","styled","useThemeProps","unstable_composeClasses","composeClasses","DAY_MARGIN","useUtils","areDayPropsEqual","PickersDay","getDateRangePickerDayUtilityClass","dateRangePickerDayClasses","getReleaseInfo","jsx","_jsx","releaseInfo","useUtilityClasses","ownerState","isHighlighting","outsideCurrentMonth","isStartOfHighlighting","isStartOfMonth","isEndOfHighlighting","isEndOfMonth","isPreviewing","isStartOfPreviewing","isEndOfPreviewing","selected","classes","slots","root","rangeIntervalPreview","day","endBorderStyle","borderTopRightRadius","borderBottomRightRadius","startBorderStyle","borderTopLeftRadius","borderBottomLeftRadius","DateRangePickerDayRoot","name","slot","overridesResolver","_","styles","rangeIntervalDayHighlight","rangeIntervalDayHighlightStart","rangeIntervalDayHighlightEnd","theme","rangeIntervalDayPreview","borderLeftColor","palette","divider","borderRightColor","borderRadius","color","primary","contrastText","backgroundColor","light","paddingLeft","marginLeft","paddingRight","marginRight","propTypes","object","isRequired","DateRangePickerDayRangeIntervalPreview","rangeIntervalDayPreviewStart","rangeIntervalDayPreviewEnd","border","DateRangePickerDayDay","dayInsideRangeInterval","dayOutsideRangeInterval","notSelectedDate","transform","grey","getContrastText","DateRangePickerDayRaw","forwardRef","DateRangePickerDay","inProps","ref","props","className","other","utils","isSameDay","endOfMonth","startOfMonth","shouldRenderHighlight","shouldRenderPreview","children","disableMargin","process","env","NODE_ENV","any","disabled","bool","disableHighlightToday","isAnimating","onDaySelect","func","showDaysOutsideCurrentMonth","sx","oneOfType","arrayOf","today","propsAreEqual","prevProps","nextProps","memo"],"sources":["/Users/chiaqiyang/Desktop/DoubleC-main/client/node_modules/@mui/x-date-pickers-pro/DateRangePickerDay/DateRangePickerDay.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"day\", \"outsideCurrentMonth\", \"isEndOfHighlighting\", \"isEndOfPreviewing\", \"isHighlighting\", \"isPreviewing\", \"isStartOfHighlighting\", \"isStartOfPreviewing\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useLicenseVerifier } from '@mui/x-license-pro';\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { DAY_MARGIN, useUtils, areDayPropsEqual } from '@mui/x-date-pickers/internals';\nimport { PickersDay } from '@mui/x-date-pickers/PickersDay';\nimport { getDateRangePickerDayUtilityClass, dateRangePickerDayClasses } from './dateRangePickerDayClasses';\nimport { getReleaseInfo } from '../internal/utils/releaseInfo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst releaseInfo = getReleaseInfo();\n\nconst useUtilityClasses = ownerState => {\n  const {\n    isHighlighting,\n    outsideCurrentMonth,\n    isStartOfHighlighting,\n    isStartOfMonth,\n    isEndOfHighlighting,\n    isEndOfMonth,\n    isPreviewing,\n    isStartOfPreviewing,\n    isEndOfPreviewing,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', isHighlighting && !outsideCurrentMonth && 'rangeIntervalDayHighlight', (isStartOfHighlighting || isStartOfMonth) && 'rangeIntervalDayHighlightStart', (isEndOfHighlighting || isEndOfMonth) && 'rangeIntervalDayHighlightEnd'],\n    rangeIntervalPreview: ['rangeIntervalPreview', isPreviewing && !outsideCurrentMonth && 'rangeIntervalDayPreview', (isStartOfPreviewing || isStartOfMonth) && 'rangeIntervalDayPreviewStart', (isEndOfPreviewing || isEndOfMonth) && 'rangeIntervalDayPreviewEnd'],\n    day: ['day', !selected && 'notSelectedDate', !isHighlighting && 'dayOutsideRangeInterval', !selected && isHighlighting && 'dayInsideRangeInterval']\n  };\n  return composeClasses(slots, getDateRangePickerDayUtilityClass, classes);\n};\n\nconst endBorderStyle = {\n  borderTopRightRadius: '50%',\n  borderBottomRightRadius: '50%'\n};\nconst startBorderStyle = {\n  borderTopLeftRadius: '50%',\n  borderBottomLeftRadius: '50%'\n};\nconst DateRangePickerDayRoot = styled('div', {\n  name: 'MuiDateRangePickerDay',\n  slot: 'Root',\n  overridesResolver: (_, styles) => [{\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayHighlight}`]: styles.rangeIntervalDayHighlight\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayHighlightStart}`]: styles.rangeIntervalDayHighlightStart\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayHighlightEnd}`]: styles.rangeIntervalDayHighlightEnd\n  }, styles.root]\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  [`&:first-of-type .${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: _extends({}, startBorderStyle, {\n    borderLeftColor: theme.palette.divider\n  }),\n  [`&:last-of-type .${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: _extends({}, endBorderStyle, {\n    borderRightColor: theme.palette.divider\n  })\n}, ownerState.isHighlighting && !ownerState.outsideCurrentMonth && {\n  borderRadius: 0,\n  color: theme.palette.primary.contrastText,\n  backgroundColor: alpha(theme.palette.primary.light, 0.6),\n  '&:first-of-type': startBorderStyle,\n  '&:last-of-type': endBorderStyle\n}, (ownerState.isStartOfHighlighting || ownerState.isStartOfMonth) && _extends({}, startBorderStyle, {\n  paddingLeft: 0,\n  marginLeft: DAY_MARGIN / 2\n}), (ownerState.isEndOfHighlighting || ownerState.isEndOfMonth) && _extends({}, endBorderStyle, {\n  paddingRight: 0,\n  marginRight: DAY_MARGIN / 2\n})));\nDateRangePickerDayRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  ownerState: PropTypes.object.isRequired\n};\nconst DateRangePickerDayRangeIntervalPreview = styled('div', {\n  name: 'MuiDateRangePickerDay',\n  slot: 'RangeIntervalPreview',\n  overridesResolver: (_, styles) => [{\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: styles.rangeIntervalDayPreview\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayPreviewStart}`]: styles.rangeIntervalDayPreviewStart\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayPreviewEnd}`]: styles.rangeIntervalDayPreviewEnd\n  }, styles.rangeIntervalPreview]\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  // replace default day component margin with transparent border to avoid jumping on preview\n  border: '2px solid transparent'\n}, ownerState.isPreviewing && !ownerState.outsideCurrentMonth && _extends({\n  borderRadius: 0,\n  border: `2px dashed ${theme.palette.divider}`,\n  borderLeftColor: 'transparent',\n  borderRightColor: 'transparent'\n}, (ownerState.isStartOfPreviewing || ownerState.isStartOfMonth) && _extends({\n  borderLeftColor: theme.palette.divider\n}, startBorderStyle), (ownerState.isEndOfPreviewing || ownerState.isEndOfMonth) && _extends({\n  borderRightColor: theme.palette.divider\n}, endBorderStyle))));\nDateRangePickerDayRangeIntervalPreview.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  ownerState: PropTypes.object.isRequired\n};\nconst DateRangePickerDayDay = styled(PickersDay, {\n  name: 'MuiDateRangePickerDay',\n  slot: 'Day',\n  overridesResolver: (_, styles) => [{\n    [`&.${dateRangePickerDayClasses.dayInsideRangeInterval}`]: styles.dayInsideRangeInterval\n  }, {\n    [`&.${dateRangePickerDayClasses.dayOutsideRangeInterval}`]: styles.dayOutsideRangeInterval\n  }, {\n    [`&.${dateRangePickerDayClasses.notSelectedDate}`]: styles.notSelectedDate\n  }, styles.day]\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  // Required to overlap preview border\n  transform: 'scale(1.1)',\n  '& > *': {\n    transform: 'scale(0.9)'\n  }\n}, !ownerState.selected && {\n  backgroundColor: 'transparent'\n}, !ownerState.isHighlighting && {\n  '&:hover': {\n    border: `1px solid ${theme.palette.grey[500]}`\n  }\n}, !ownerState.selected && ownerState.isHighlighting && {\n  color: theme.palette.getContrastText(alpha(theme.palette.primary.light, 0.6))\n}));\nconst DateRangePickerDayRaw = /*#__PURE__*/React.forwardRef(function DateRangePickerDay(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDateRangePickerDay'\n  });\n\n  const {\n    className,\n    day,\n    outsideCurrentMonth,\n    isHighlighting,\n    isPreviewing,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  useLicenseVerifier('x-date-pickers-pro', releaseInfo);\n  const utils = useUtils();\n  const isEndOfMonth = utils.isSameDay(day, utils.endOfMonth(day));\n  const isStartOfMonth = utils.isSameDay(day, utils.startOfMonth(day));\n  const shouldRenderHighlight = isHighlighting && !outsideCurrentMonth;\n  const shouldRenderPreview = isPreviewing && !outsideCurrentMonth;\n\n  const ownerState = _extends({}, props, {\n    selected,\n    isStartOfMonth,\n    isEndOfMonth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DateRangePickerDayRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    children: /*#__PURE__*/_jsx(DateRangePickerDayRangeIntervalPreview, {\n      className: classes.rangeIntervalPreview,\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(DateRangePickerDayDay, _extends({}, other, {\n        ref: ref,\n        disableMargin: true,\n        day: day,\n        selected: selected,\n        outsideCurrentMonth: outsideCurrentMonth,\n        className: classes.day,\n        ownerState: ownerState\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangePickerDayRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The date to show.\n   */\n  day: PropTypes.any.isRequired,\n\n  /**\n   * If `true`, renders as disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * If `true`, days are rendering without margin. Useful for displaying linked range of days.\n   * @default false\n   */\n  disableMargin: PropTypes.bool,\n  isAnimating: PropTypes.bool,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isEndOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isEndOfPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a highlighted date range.\n   */\n  isHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a preview date range.\n   */\n  isPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isStartOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isStartOfPreviewing: PropTypes.bool.isRequired,\n  onDaySelect: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, day is outside of month and will be hidden.\n   */\n  outsideCurrentMonth: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, renders as selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * If `true`, days that have `outsideCurrentMonth={true}` are displayed.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `true`, renders as today date.\n   * @default false\n   */\n  today: PropTypes.bool\n} : void 0;\n\nconst propsAreEqual = (prevProps, nextProps) => {\n  return prevProps.isHighlighting === nextProps.isHighlighting && prevProps.isEndOfHighlighting === nextProps.isEndOfHighlighting && prevProps.isStartOfHighlighting === nextProps.isStartOfHighlighting && prevProps.isPreviewing === nextProps.isPreviewing && prevProps.isEndOfPreviewing === nextProps.isEndOfPreviewing && prevProps.isStartOfPreviewing === nextProps.isStartOfPreviewing && areDayPropsEqual(prevProps, nextProps);\n};\n/**\n *\n * Demos:\n *\n * - [Date Range Picker](https://mui.com/x/react-date-pickers/date-range-picker/)\n *\n * API:\n *\n * - [DateRangePickerDay API](https://mui.com/x/api/date-pickers/date-range-picker-day/)\n */\n\n\nexport const DateRangePickerDay = /*#__PURE__*/React.memo(DateRangePickerDayRaw, propsAreEqual);"],"mappings":"AAAA,OAAOA,6BAA6B,MAAM,yDAAyD;AACnG,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,MAAMC,SAAS,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,cAAc,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,UAAU,CAAC;AACvM,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,kBAAkB,QAAQ,oBAAoB;AACvD,SAASC,KAAK,EAAEC,MAAM,EAAEC,aAAa,QAAQ,sBAAsB;AACnE,SAASC,uBAAuB,IAAIC,cAAc,QAAQ,eAAe;AACzE,SAASC,UAAU,EAAEC,QAAQ,EAAEC,gBAAgB,QAAQ,+BAA+B;AACtF,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,SAASC,iCAAiC,EAAEC,yBAAyB,QAAQ,6BAA6B;AAC1G,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,WAAW,GAAGH,cAAc,EAAE;AAEpC,MAAMI,iBAAiB,GAAGC,UAAU,IAAI;EACtC,MAAM;IACJC,cAAc;IACdC,mBAAmB;IACnBC,qBAAqB;IACrBC,cAAc;IACdC,mBAAmB;IACnBC,YAAY;IACZC,YAAY;IACZC,mBAAmB;IACnBC,iBAAiB;IACjBC,QAAQ;IACRC;EACF,CAAC,GAAGX,UAAU;EACd,MAAMY,KAAK,GAAG;IACZC,IAAI,EAAE,CAAC,MAAM,EAAEZ,cAAc,IAAI,CAACC,mBAAmB,IAAI,2BAA2B,EAAE,CAACC,qBAAqB,IAAIC,cAAc,KAAK,gCAAgC,EAAE,CAACC,mBAAmB,IAAIC,YAAY,KAAK,8BAA8B,CAAC;IAC7OQ,oBAAoB,EAAE,CAAC,sBAAsB,EAAEP,YAAY,IAAI,CAACL,mBAAmB,IAAI,yBAAyB,EAAE,CAACM,mBAAmB,IAAIJ,cAAc,KAAK,8BAA8B,EAAE,CAACK,iBAAiB,IAAIH,YAAY,KAAK,4BAA4B,CAAC;IACjQS,GAAG,EAAE,CAAC,KAAK,EAAE,CAACL,QAAQ,IAAI,iBAAiB,EAAE,CAACT,cAAc,IAAI,yBAAyB,EAAE,CAACS,QAAQ,IAAIT,cAAc,IAAI,wBAAwB;EACpJ,CAAC;EACD,OAAOb,cAAc,CAACwB,KAAK,EAAEnB,iCAAiC,EAAEkB,OAAO,CAAC;AAC1E,CAAC;AAED,MAAMK,cAAc,GAAG;EACrBC,oBAAoB,EAAE,KAAK;EAC3BC,uBAAuB,EAAE;AAC3B,CAAC;AACD,MAAMC,gBAAgB,GAAG;EACvBC,mBAAmB,EAAE,KAAK;EAC1BC,sBAAsB,EAAE;AAC1B,CAAC;AACD,MAAMC,sBAAsB,GAAGrC,MAAM,CAAC,KAAK,EAAE;EAC3CsC,IAAI,EAAE,uBAAuB;EAC7BC,IAAI,EAAE,MAAM;EACZC,iBAAiB,EAAE,CAACC,CAAC,EAAEC,MAAM,KAAK,CAAC;IACjC,CAAE,KAAIjC,yBAAyB,CAACkC,yBAA0B,EAAC,GAAGD,MAAM,CAACC;EACvE,CAAC,EAAE;IACD,CAAE,KAAIlC,yBAAyB,CAACmC,8BAA+B,EAAC,GAAGF,MAAM,CAACE;EAC5E,CAAC,EAAE;IACD,CAAE,KAAInC,yBAAyB,CAACoC,4BAA6B,EAAC,GAAGH,MAAM,CAACG;EAC1E,CAAC,EAAEH,MAAM,CAACd,IAAI;AAChB,CAAC,CAAC,CAAC;EAAA,IAAC;IACFkB,KAAK;IACL/B;EACF,CAAC;EAAA,OAAKtB,QAAQ,CAAC;IACb,CAAE,oBAAmBgB,yBAAyB,CAACsC,uBAAwB,EAAC,GAAGtD,QAAQ,CAAC,CAAC,CAAC,EAAEyC,gBAAgB,EAAE;MACxGc,eAAe,EAAEF,KAAK,CAACG,OAAO,CAACC;IACjC,CAAC,CAAC;IACF,CAAE,mBAAkBzC,yBAAyB,CAACsC,uBAAwB,EAAC,GAAGtD,QAAQ,CAAC,CAAC,CAAC,EAAEsC,cAAc,EAAE;MACrGoB,gBAAgB,EAAEL,KAAK,CAACG,OAAO,CAACC;IAClC,CAAC;EACH,CAAC,EAAEnC,UAAU,CAACC,cAAc,IAAI,CAACD,UAAU,CAACE,mBAAmB,IAAI;IACjEmC,YAAY,EAAE,CAAC;IACfC,KAAK,EAAEP,KAAK,CAACG,OAAO,CAACK,OAAO,CAACC,YAAY;IACzCC,eAAe,EAAEzD,KAAK,CAAC+C,KAAK,CAACG,OAAO,CAACK,OAAO,CAACG,KAAK,EAAE,GAAG,CAAC;IACxD,iBAAiB,EAAEvB,gBAAgB;IACnC,gBAAgB,EAAEH;EACpB,CAAC,EAAE,CAAChB,UAAU,CAACG,qBAAqB,IAAIH,UAAU,CAACI,cAAc,KAAK1B,QAAQ,CAAC,CAAC,CAAC,EAAEyC,gBAAgB,EAAE;IACnGwB,WAAW,EAAE,CAAC;IACdC,UAAU,EAAEvD,UAAU,GAAG;EAC3B,CAAC,CAAC,EAAE,CAACW,UAAU,CAACK,mBAAmB,IAAIL,UAAU,CAACM,YAAY,KAAK5B,QAAQ,CAAC,CAAC,CAAC,EAAEsC,cAAc,EAAE;IAC9F6B,YAAY,EAAE,CAAC;IACfC,WAAW,EAAEzD,UAAU,GAAG;EAC5B,CAAC,CAAC,CAAC;AAAA,EAAC;AACJiC,sBAAsB,CAACyB,SAAS,GAAG;EACjC;EACA;EACA;EACA;EACA/C,UAAU,EAAEnB,SAAS,CAACmE,MAAM,CAACC;AAC/B,CAAC;AACD,MAAMC,sCAAsC,GAAGjE,MAAM,CAAC,KAAK,EAAE;EAC3DsC,IAAI,EAAE,uBAAuB;EAC7BC,IAAI,EAAE,sBAAsB;EAC5BC,iBAAiB,EAAE,CAACC,CAAC,EAAEC,MAAM,KAAK,CAAC;IACjC,CAAE,KAAIjC,yBAAyB,CAACsC,uBAAwB,EAAC,GAAGL,MAAM,CAACK;EACrE,CAAC,EAAE;IACD,CAAE,KAAItC,yBAAyB,CAACyD,4BAA6B,EAAC,GAAGxB,MAAM,CAACwB;EAC1E,CAAC,EAAE;IACD,CAAE,KAAIzD,yBAAyB,CAAC0D,0BAA2B,EAAC,GAAGzB,MAAM,CAACyB;EACxE,CAAC,EAAEzB,MAAM,CAACb,oBAAoB;AAChC,CAAC,CAAC,CAAC;EAAA,IAAC;IACFiB,KAAK;IACL/B;EACF,CAAC;EAAA,OAAKtB,QAAQ,CAAC;IACb;IACA2E,MAAM,EAAE;EACV,CAAC,EAAErD,UAAU,CAACO,YAAY,IAAI,CAACP,UAAU,CAACE,mBAAmB,IAAIxB,QAAQ,CAAC;IACxE2D,YAAY,EAAE,CAAC;IACfgB,MAAM,EAAG,cAAatB,KAAK,CAACG,OAAO,CAACC,OAAQ,EAAC;IAC7CF,eAAe,EAAE,aAAa;IAC9BG,gBAAgB,EAAE;EACpB,CAAC,EAAE,CAACpC,UAAU,CAACQ,mBAAmB,IAAIR,UAAU,CAACI,cAAc,KAAK1B,QAAQ,CAAC;IAC3EuD,eAAe,EAAEF,KAAK,CAACG,OAAO,CAACC;EACjC,CAAC,EAAEhB,gBAAgB,CAAC,EAAE,CAACnB,UAAU,CAACS,iBAAiB,IAAIT,UAAU,CAACM,YAAY,KAAK5B,QAAQ,CAAC;IAC1F0D,gBAAgB,EAAEL,KAAK,CAACG,OAAO,CAACC;EAClC,CAAC,EAAEnB,cAAc,CAAC,CAAC,CAAC;AAAA,EAAC;AACrBkC,sCAAsC,CAACH,SAAS,GAAG;EACjD;EACA;EACA;EACA;EACA/C,UAAU,EAAEnB,SAAS,CAACmE,MAAM,CAACC;AAC/B,CAAC;AACD,MAAMK,qBAAqB,GAAGrE,MAAM,CAACO,UAAU,EAAE;EAC/C+B,IAAI,EAAE,uBAAuB;EAC7BC,IAAI,EAAE,KAAK;EACXC,iBAAiB,EAAE,CAACC,CAAC,EAAEC,MAAM,KAAK,CAAC;IACjC,CAAE,KAAIjC,yBAAyB,CAAC6D,sBAAuB,EAAC,GAAG5B,MAAM,CAAC4B;EACpE,CAAC,EAAE;IACD,CAAE,KAAI7D,yBAAyB,CAAC8D,uBAAwB,EAAC,GAAG7B,MAAM,CAAC6B;EACrE,CAAC,EAAE;IACD,CAAE,KAAI9D,yBAAyB,CAAC+D,eAAgB,EAAC,GAAG9B,MAAM,CAAC8B;EAC7D,CAAC,EAAE9B,MAAM,CAACZ,GAAG;AACf,CAAC,CAAC,CAAC;EAAA,IAAC;IACFgB,KAAK;IACL/B;EACF,CAAC;EAAA,OAAKtB,QAAQ,CAAC;IACb;IACAgF,SAAS,EAAE,YAAY;IACvB,OAAO,EAAE;MACPA,SAAS,EAAE;IACb;EACF,CAAC,EAAE,CAAC1D,UAAU,CAACU,QAAQ,IAAI;IACzB+B,eAAe,EAAE;EACnB,CAAC,EAAE,CAACzC,UAAU,CAACC,cAAc,IAAI;IAC/B,SAAS,EAAE;MACToD,MAAM,EAAG,aAAYtB,KAAK,CAACG,OAAO,CAACyB,IAAI,CAAC,GAAG,CAAE;IAC/C;EACF,CAAC,EAAE,CAAC3D,UAAU,CAACU,QAAQ,IAAIV,UAAU,CAACC,cAAc,IAAI;IACtDqC,KAAK,EAAEP,KAAK,CAACG,OAAO,CAAC0B,eAAe,CAAC5E,KAAK,CAAC+C,KAAK,CAACG,OAAO,CAACK,OAAO,CAACG,KAAK,EAAE,GAAG,CAAC;EAC9E,CAAC,CAAC;AAAA,EAAC;AACH,MAAMmB,qBAAqB,GAAG,aAAajF,KAAK,CAACkF,UAAU,CAAC,SAASC,kBAAkB,CAACC,OAAO,EAAEC,GAAG,EAAE;EACpG,MAAMC,KAAK,GAAGhF,aAAa,CAAC;IAC1BgF,KAAK,EAAEF,OAAO;IACdzC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAM;MACJ4C,SAAS;MACTpD,GAAG;MACHb,mBAAmB;MACnBD,cAAc;MACdM,YAAY;MACZG,QAAQ,GAAG;IACb,CAAC,GAAGwD,KAAK;IACHE,KAAK,GAAG3F,6BAA6B,CAACyF,KAAK,EAAEvF,SAAS,CAAC;EAE7DI,kBAAkB,CAAC,oBAAoB,EAAEe,WAAW,CAAC;EACrD,MAAMuE,KAAK,GAAG/E,QAAQ,EAAE;EACxB,MAAMgB,YAAY,GAAG+D,KAAK,CAACC,SAAS,CAACvD,GAAG,EAAEsD,KAAK,CAACE,UAAU,CAACxD,GAAG,CAAC,CAAC;EAChE,MAAMX,cAAc,GAAGiE,KAAK,CAACC,SAAS,CAACvD,GAAG,EAAEsD,KAAK,CAACG,YAAY,CAACzD,GAAG,CAAC,CAAC;EACpE,MAAM0D,qBAAqB,GAAGxE,cAAc,IAAI,CAACC,mBAAmB;EACpE,MAAMwE,mBAAmB,GAAGnE,YAAY,IAAI,CAACL,mBAAmB;EAEhE,MAAMF,UAAU,GAAGtB,QAAQ,CAAC,CAAC,CAAC,EAAEwF,KAAK,EAAE;IACrCxD,QAAQ;IACRN,cAAc;IACdE;EACF,CAAC,CAAC;EAEF,MAAMK,OAAO,GAAGZ,iBAAiB,CAACC,UAAU,CAAC;EAC7C,OAAO,aAAaH,IAAI,CAACyB,sBAAsB,EAAE;IAC/C6C,SAAS,EAAErF,IAAI,CAAC6B,OAAO,CAACE,IAAI,EAAEsD,SAAS,CAAC;IACxCnE,UAAU,EAAEA,UAAU;IACtB2E,QAAQ,EAAE,aAAa9E,IAAI,CAACqD,sCAAsC,EAAE;MAClEiB,SAAS,EAAExD,OAAO,CAACG,oBAAoB;MACvCd,UAAU,EAAEA,UAAU;MACtB2E,QAAQ,EAAE,aAAa9E,IAAI,CAACyD,qBAAqB,EAAE5E,QAAQ,CAAC,CAAC,CAAC,EAAE0F,KAAK,EAAE;QACrEH,GAAG,EAAEA,GAAG;QACRW,aAAa,EAAE,IAAI;QACnB7D,GAAG,EAAEA,GAAG;QACRL,QAAQ,EAAEA,QAAQ;QAClBR,mBAAmB,EAAEA,mBAAmB;QACxCiE,SAAS,EAAExD,OAAO,CAACI,GAAG;QACtBf,UAAU,EAAEA;MACd,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC;AACF6E,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGlB,qBAAqB,CAACd,SAAS,GAAG;EACxE;EACA;EACA;EACA;;EAEA;AACF;AACA;EACEpC,OAAO,EAAE9B,SAAS,CAACmE,MAAM;EAEzB;AACF;AACA;EACEjC,GAAG,EAAElC,SAAS,CAACmG,GAAG,CAAC/B,UAAU;EAE7B;AACF;AACA;AACA;EACEgC,QAAQ,EAAEpG,SAAS,CAACqG,IAAI;EAExB;AACF;AACA;AACA;EACEC,qBAAqB,EAAEtG,SAAS,CAACqG,IAAI;EAErC;AACF;AACA;AACA;EACEN,aAAa,EAAE/F,SAAS,CAACqG,IAAI;EAC7BE,WAAW,EAAEvG,SAAS,CAACqG,IAAI;EAE3B;AACF;AACA;EACE7E,mBAAmB,EAAExB,SAAS,CAACqG,IAAI,CAACjC,UAAU;EAE9C;AACF;AACA;EACExC,iBAAiB,EAAE5B,SAAS,CAACqG,IAAI,CAACjC,UAAU;EAE5C;AACF;AACA;EACEhD,cAAc,EAAEpB,SAAS,CAACqG,IAAI,CAACjC,UAAU;EAEzC;AACF;AACA;EACE1C,YAAY,EAAE1B,SAAS,CAACqG,IAAI,CAACjC,UAAU;EAEvC;AACF;AACA;EACE9C,qBAAqB,EAAEtB,SAAS,CAACqG,IAAI,CAACjC,UAAU;EAEhD;AACF;AACA;EACEzC,mBAAmB,EAAE3B,SAAS,CAACqG,IAAI,CAACjC,UAAU;EAC9CoC,WAAW,EAAExG,SAAS,CAACyG,IAAI,CAACrC,UAAU;EAEtC;AACF;AACA;EACE/C,mBAAmB,EAAErB,SAAS,CAACqG,IAAI,CAACjC,UAAU;EAE9C;AACF;AACA;AACA;EACEvC,QAAQ,EAAE7B,SAAS,CAACqG,IAAI;EAExB;AACF;AACA;AACA;EACEK,2BAA2B,EAAE1G,SAAS,CAACqG,IAAI;EAE3C;AACF;AACA;EACEM,EAAE,EAAE3G,SAAS,CAAC4G,SAAS,CAAC,CAAC5G,SAAS,CAAC6G,OAAO,CAAC7G,SAAS,CAAC4G,SAAS,CAAC,CAAC5G,SAAS,CAACyG,IAAI,EAAEzG,SAAS,CAACmE,MAAM,EAAEnE,SAAS,CAACqG,IAAI,CAAC,CAAC,CAAC,EAAErG,SAAS,CAACyG,IAAI,EAAEzG,SAAS,CAACmE,MAAM,CAAC,CAAC;EAEvJ;AACF;AACA;AACA;EACE2C,KAAK,EAAE9G,SAAS,CAACqG;AACnB,CAAC,GAAG,KAAK,CAAC;AAEV,MAAMU,aAAa,GAAG,CAACC,SAAS,EAAEC,SAAS,KAAK;EAC9C,OAAOD,SAAS,CAAC5F,cAAc,KAAK6F,SAAS,CAAC7F,cAAc,IAAI4F,SAAS,CAACxF,mBAAmB,KAAKyF,SAAS,CAACzF,mBAAmB,IAAIwF,SAAS,CAAC1F,qBAAqB,KAAK2F,SAAS,CAAC3F,qBAAqB,IAAI0F,SAAS,CAACtF,YAAY,KAAKuF,SAAS,CAACvF,YAAY,IAAIsF,SAAS,CAACpF,iBAAiB,KAAKqF,SAAS,CAACrF,iBAAiB,IAAIoF,SAAS,CAACrF,mBAAmB,KAAKsF,SAAS,CAACtF,mBAAmB,IAAIjB,gBAAgB,CAACsG,SAAS,EAAEC,SAAS,CAAC;AACza,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAM/B,kBAAkB,GAAG,aAAanF,KAAK,CAACmH,IAAI,CAAClC,qBAAqB,EAAE+B,aAAa,CAAC"},"metadata":{},"sourceType":"module"}